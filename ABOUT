This is simple golang project that aims to create reverse proxy like frp but based on wireguard-go.

cmd/rps is the wireguard server that accept traffic from public and forward it to wireguard client.

cmd/rpc is the wireguard client that forward traffic to the backend services.

Both will use wg.conf to read the wireguard config like private key and peer addr,
while the flags used to adjust the reversed services.

Since this is simpler, we need to make sure both addr:port on rps and rpc same,

rps: -a 0.0.0.0:25565:10.0.0.2 will accept public traffic on 0.0.0.0:25565 then forward it to wireguard client with ip 10.0.0.2:25565,
this flags can be used multiple time to add another reverse proxy. If listen_ip is empty (e.g., :25565:10.0.0.2), it will listen on all addresses.

rpc: -r localhost:25565 will accept traffic from wireguard server and forward it to local service on localhost:25565.
